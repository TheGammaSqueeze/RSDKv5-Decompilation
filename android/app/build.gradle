apply plugin: 'com.android.application'

def autobuildFlag = false
def retroRevision = 3

android {
    ndkVersion "24.0.8215888"
    compileSdkVersion 33

    buildFeatures {
        prefab true
    }

    defaultConfig {
        applicationId "org.rems.rsdkv5"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 100
        versionName "1.1.0"

        if (project.hasProperty("RETRO_DISABLE_PLUS")) {
            autobuildFlag = true
        }
        if (project.hasProperty("RETRO_REVISION")) {
            retroRevision = project.property("RETRO_REVISION")
        }

        // Drive CMake and pass flags through
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared",
                          "-DPLATFORM=Android",
                          "-DRETRO_DISABLE_PLUS=${autobuildFlag}",
                          "-DRETRO_REVISION=${retroRevision}",

                          // --- Game side ---
                          "-DWITH_RSDK=ON",
                          "-DGAME_STATIC=OFF",
                          "-DGAME_NAME=Game",

                          // --- Media codecs (music/video) ---
                          // Keep ON for Ogg music & Theora videos
                          "-DCOMPILE_OGG=ON",
                          "-DCOMPILE_THEORA=ON"
            }
        }

        // Build for arm64; add others if desired
        ndk {
            abiFilters "arm64-v8a"
        }
    }

    signingConfigs {
        release {
            storeFile file("../release-key.jks")
            storePassword "retroengine"
            keyAlias "key0"
            keyPassword "retroengine"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }

    // Ensure Gradle uses the JNI CMake forwarder and a known CMake version
    externalNativeBuild {
        cmake {
            path "jni/CMakeLists.txt"
            version "3.22.1"
        }
    }

    // If any dependency also bundles libc++_shared, avoid duplicate packaging errors
    packagingOptions {
        pickFirsts += ["**/libc++_shared.so"]
    }

    namespace 'org.rems.rsdkv5'

    lint {
        abortOnError false
    }

    // Optional: include prebuilt .so files from libs/ if you're not excluding them
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets {
            main {
                jniLibs.srcDir 'libs'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.core:core:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "androidx.games:games-activity:1.2.1"
    implementation "androidx.games:games-controller:1.1.0"
    implementation "androidx.games:games-frame-pacing:1.10.1"
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation "com.google.oboe:oboe:1.6.1"
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'
}
